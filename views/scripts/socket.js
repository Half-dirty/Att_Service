$(document).ready(function () {
    //–¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï, –ò–• –ë–´–¢–¨ –ù–ï –î–û–õ–ñ–ù–û, –≠–¢–ò –î–ê–ù–ù–´–ï –î–û–õ–ñ–ù–´ –í–´–¢–Ø–ì–ò–í–ê–¢–¨–°–Ø –ò–ó –ë–î –ò–õ–ò –¢–û–ö–ï–ù–ê!!!
    const role = "admin";  // –º–æ–∂–Ω–æ –≤—ã—Ç–∞—Å–∫–∏–≤–∞—Ç—å –∏–∑ —Ç–æ–∫–µ–Ω–∞
    const id = "admin1";

    // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–µ—Ç –∏–ª–∏ –æ–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ
    if (!window.socket || socket.readyState === WebSocket.CLOSED) {

        window.socket = new WebSocket("ws://" + location.host + "/ws?role=" + role + "&id=" + id);

        socket.onopen = () => {
            console.log("‚úÖ WebSocket –æ—Ç–∫—Ä—ã—Ç");
        };

        //–°–ª—É—à–∞—Ç–µ–ª—å WebSocket —Å–æ–æ–±—â–µ–Ω–∏–π —É –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        socket.onmessage = (event) => {
            if (!event.data) {
                console.warn("‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç WebSocket");
                return;
            }

            let message;
            try {
                message = JSON.parse(event.data);
            } catch (e) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:", e, "–î–∞–Ω–Ω—ã–µ:", event.data);
                return;
            }

            switch (message.type) {
                case "start_exam":
                    start_exam(message);
                    break;
                case "open_student":
                    open_student(message);
                    break;
                case "redirect":
                    redirect(message);
                    break;
                case "progress_update":
                    progress_update(message);
                    break;
            }
        };
        // –°–æ–±—ã—Ç–∏–µ –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        socket.onerror = (error) => {
            console.error("–û—à–∏–±–∫–∞ WebSocket: ", error);
        };

        // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        socket.onclose = (event) => {
            console.log("WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ", event);
        };
    }

    // $('.exam__start-button').on('click', function () {
    //     const command = {
    //         type: "start",
    //         data: {
    //             role: role,
    //             id: id
    //         }
    //     };
    //
    //     if (window.socket && socket.readyState === WebSocket.OPEN) {
    //         socket.send(JSON.stringify(command));
    //         console.log("üöÄ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–∞ —ç–∫–∑–∞–º–µ–Ω–∞");
    //     } else {
    //         console.warn("‚ö†Ô∏è –°–æ–∫–µ—Ç –Ω–µ –≥–æ—Ç–æ–≤, –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞");
    //     }
    // });

    $('.exam__list').on('click', '.exam__item', function (e) {
        e.preventDefault();

        let studentId = $(this).data("student-id");
        let currentProgress = parseInt($('#current_progress-' + studentId).val());
        let totalProgress = parseInt($('#total_progress-' + studentId).val());

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç —É–∂–µ –æ—Ü–µ–Ω–µ–Ω
        if (currentProgress === totalProgress) {
            console.log("–≠—Ç–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç —É–∂–µ –æ—Ü–µ–Ω–µ–Ω.");
            return; // –ù–µ –≤—ã–±–∏—Ä–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏, –µ—Å–ª–∏ –µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω
        }

        console.log("üì§ ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞:", studentId);

        // –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const selectStudentCommand = {
            type: "select_student",
            data: {
                studentId: studentId
            }
        };
        socket.send(JSON.stringify(selectStudentCommand));
    });


    $('#subscribe_button').on('click', function (e) {
        e.preventDefault();
        let studentId = $('.exam__person').data("id");
        let protocol = $('#protocol_num').val();
        let abstain = $('#abstain').prop('checked');
        let score = $('#total').val();
        let recomendation = $('#recomendation').val();
        let qualification = $('#qualification').val();
        let specialization = $('#specialization').val();

        // console.log(studentId, protocol, score, recomendation, qualification, specialization, abstain);

        const subscribeCommand = {
            type: "subscribe_document",
            data: {
                studentId: studentId,
                protocol: protocol,
                abstain: abstain,
                score: score,
                recomendation: recomendation,
                qualification: qualification,
                specialization: specialization
            }
        };

        socket.send(JSON.stringify(subscribeCommand));
    })
})

function start_exam(message) {
    const data = message.data;
    if (message.role === "examiner") {
        // —Ä–µ–¥–∏—Ä–µ–∫—Ç —É —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–æ–≤
        window.location.href = data.url;
    }
    if (message.role["role"] === "admin") {
        window.location.href = data.url;
    }
}

function open_student(message) {
    const data = message.data;
    const user = data.student[0];

    if (data && data.url) {
        window.location.href = data.url;
    } else {
        console.warn("URL –¥–ª—è –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
function redirect(message) {
    const data = message.data;
    // console.log(data);
    if (data && data.url) {
        window.location.href = data.url;
    } else {
        console.warn("URL –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
    }
}

function progress_update(message) {
    const data = message.data;
    const studentId = data.studentId;
    const currentProgress = data.currentProgress;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    const progressElement = $('#current_progress-' + studentId.toString());
    if (progressElement) {
        progressElement.value = currentProgress;
    }
}

function checkAllStudentsEvaluated() {
    let allEvaluated = true;
    $('.exam__item').each(function() {
        let studentId = $(this).data("student-id");
        let currentProgress = parseInt($('#current_progress-' + studentId).val());
        let totalProgress = parseInt($('#total_progress-' + studentId).val());

        if (currentProgress !== totalProgress) {
            allEvaluated = false; // –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –æ—Ü–µ–Ω–∫—É
            return false; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª
        }
    });

    // –í–∫–ª—é—á–∞–µ–º –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É "–Ω–∞—á–∞—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏–µ"
    if (allEvaluated) {
        $('.exam__discuss-button').prop('disabled', false);
    } else {
        $('.exam__discuss-button').prop('disabled', true);
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–µ—Å—Å
$('.exam__list').on('input', 'input[type="number"]', function() {
    checkAllStudentsEvaluated();
});

