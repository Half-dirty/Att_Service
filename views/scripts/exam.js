//--–¥–ª—è textarea, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è –≤–≤–æ–¥
function adjustHeight(el) {
    el.style.height = "auto";
    let maxHeight = 4 * 20; // 4 —Å—Ç—Ä–æ–∫–∏, –∫–∞–∂–¥–∞—è –æ–∫–æ–ª–æ 20px –≤—ã—Å–æ—Ç–æ–π
    el.style.height = Math.min(el.scrollHeight, maxHeight) + "px";
    if (el.scrollHeight > maxHeight) {
        el.style.overflowY = "scroll";
    } else {
        el.style.overflowY = "hidden";
    }
}
$(document).ready(function () {
    const role = $("body").data("role");
    const id = $("body").data("id");
    const name = $("body").data("name");
    const examId = $("body").data("exam-id");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ –µ—Å–ª–∏ –¥–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if (role && id && name && examId) {
        initSocket(role, id, name, examId); // ‚Üê –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ
    }
});


//--–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥–æ–Ω—è–µ–º –≤—ã—Å–æ—Ç—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".profile__textarea-auto_expand").forEach(textarea => adjustHeight(textarea));
});


$(document).ready(function () {
    //--–º–∞—Å–∫–∏ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞

    function updateScores() {
        let totalScore = 0;

        $(".exam__question-row").each(function () {
            const checkedRadio = $(this).find("input[type='radio']:checked");
            if (checkedRadio.length) {
                totalScore += parseInt(checkedRadio.val(), 10);
            }
        });

        $("#total").val(totalScore);
    }


    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π, —Ç–∞–∫ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏:
    $(document).on('click', '.exam__radio-label', function () {
        const radioId = $(this).data('radio-for');
        const radioButton = $('#' + radioId);
    
        if (!radioButton.length) {
            console.warn('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∞ –¥–ª—è', radioId);
            return;
        }
    
        radioButton.prop('checked', true);
    
        // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —É –≤—Å–µ—Ö —Å–æ—Å–µ–¥–µ–π
        radioButton.closest('tr').find('.exam__radio-label').removeClass('active');
    
        // –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é
        $(this).addClass('active');
    
        updateScores(); // –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –±–∞–ª–ª—ã
    });
    
    
    

    $(".exam__textarea-auto_expand").on("input", function () {
        adjustHeight(this);
    });

    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ "–í–æ–∑–¥–µ—Ä–∂–∞—Ç—å—Å—è"
    $(".exam__buttons-abstain input").on("change", function () {
        if ($(this).is(":checked")) {
            $("input[id='recomendation'], input[name='point'], input[id='total'], select, textarea")
                .not(".exam__buttons-subscribe")
                .prop("disabled", true)
                .val("");
            $("input[type='radio']")
                .not(".exam__buttons-subscribe")
                .prop("disabled", true)
                .prop("checked", false);
            $(".exam__radio-label").removeClass('active'); // üî• –£–±–∏—Ä–∞–µ–º —Ä–∞—Å–∫—Ä–∞—Å–∫—É
    
            if ($('#recomendation')) {
                $('#recomendation').val('').trigger('input');
            }
        } else {
            $("input[type='text'], input[type='radio'], input[type='date'], select, textarea")
                .not(".exam__buttons-subscribe")
                .prop("disabled", false);
    
            $("input[name='point'], input[id='total']").val("0");
    
            //-- –í–æ—Ç –∑–¥–µ—Å—å –í–ê–ñ–ù–û –¥–æ–±–∞–≤–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫:
            $(".exam__radio-label").removeClass('active'); // —Å–±—Ä–æ—Å —Å—Ç–∞—Ä–æ–≥–æ
            $("input[type='radio']:checked").each(function () {
                const id = $(this).attr('id');
                if (id) {
                    $(`.exam__radio-label[data-radio-for="${id}"]`).addClass('active');
                }
            });
        }
    });
    
    updateScores(); // ‚Üê —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å 0

});
$(document).ready(function () {
    function updateStudentProgress(studentId, progressPercent, grades) {
        const $container = $('#student-' + studentId).find('.exam__progress-bar-container');
        const $fill = $container.find('.exam__progress-bar-fill');
        const $studentBlock = $('#student-' + studentId);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        $fill.css('width', progressPercent + '%');

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        let colorClass = '';
        if (progressPercent < 30) {
            colorClass = 'danger';
        } else if (progressPercent < 60) {
            colorClass = 'warning';
        } else {
            colorClass = 'active';
        }
        $fill.removeClass('active warning danger').addClass(colorClass);

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Tooltip
        let $tooltip = $('#tooltip-' + studentId);
        let allGraded = true;
        let tooltipHtml = "";

        grades.forEach(grade => {
            tooltipHtml += `<tr>
                <td>${grade.examiner}</td>
                <td>${grade.status}</td>
                <td>${grade.score !== null ? grade.score : '‚Äî'}</td>
            </tr>`;
            if (grade.status !== '–æ—Ü–µ–Ω–∏–ª' || grade.score === null) {
                allGraded = false;
            }
        });

        $tooltip.find('tbody').html(tooltipHtml);

        // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏, –µ—Å–ª–∏ –≤—Å–µ –æ—Ü–µ–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã
        if (allGraded) {
            $studentBlock.addClass('completed');
        } else {
            $studentBlock.removeClass('completed');
        }
    }


    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    const socket = new WebSocket(`ws://${location.host}/ws`);
    socket.onmessage = function (event) {
        const data = JSON.parse(event.data);
        if (data.action === 'progress_update') {
            updateStudentProgress(data.studentId, data.progress, data.grades);
        }
    };

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Tooltip –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    $(".exam__progress-bar-container").on('mouseenter', function () {
        const studentId = $(this).closest('.exam__item').data('student-id');
        const $tooltip = $('#tooltip-' + studentId);
        const containerRect = this.getBoundingClientRect();

        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Tooltip
        $tooltip.css({
            'display': 'block',
            'left': containerRect.left + 'px',
            'top': (containerRect.bottom + 5) + 'px'
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–º–µ—â–∞–µ—Ç—Å—è –ª–∏ Tooltip –≤–Ω–∏–∑—É
        const tooltipHeight = $tooltip.outerHeight();
        const spaceBelow = window.innerHeight - containerRect.bottom - 5;
        if (spaceBelow < tooltipHeight) {
            $tooltip.css('top', (containerRect.top - tooltipHeight - 5) + 'px');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–º–µ—â–∞–µ—Ç—Å—è –ª–∏ Tooltip –ø–æ —à–∏—Ä–∏–Ω–µ
        const tooltipWidth = $tooltip.outerWidth();
        const spaceRight = window.innerWidth - containerRect.left;
        if (spaceRight < tooltipWidth) {
            $tooltip.css('left', (containerRect.right - tooltipWidth) + 'px');
        }
    }).on('mouseleave', function () {
        const studentId = $(this).closest('.exam__item').data('student-id');
        $('#tooltip-' + studentId).hide();
    });
});


// —ç—Ç–æ—Ç –∫–æ–¥ –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å access_token "–≤ —Ñ–æ–Ω–µ"
const refreshAccessToken = () => {
    $.ajax({
        type: 'POST',
        url: '/refresh',
        xhrFields: { withCredentials: true }, // –≤–æ—Ç —ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ!!
        success: () => console.log("–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"),
        error: () => window.location.href = "/"
    });
};

setInterval(refreshAccessToken, 10 * 60 * 1000);
