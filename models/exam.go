package models

import (
	"time"

	"gorm.io/gorm"
)

type Exam struct {
	gorm.Model
	Date            time.Time
	CommissionStart time.Time
	CommissionEnd   time.Time
	Status          string `gorm:"size:50;not null;default:'planned'"` // planned, scheduled, completed
	ChairmanID      uint
	SecretaryID     uint
	Quorum          int
	JestID          string `gorm:"unique;size:20;column:jest_id"`

	Examiners []User `gorm:"many2many:exam_examiners;"`
	Students  []User `gorm:"many2many:exam_students;"`
}

type ExamGrade struct {
	gorm.Model
	ExamID         uint
	ExaminerID     uint
	StudentID      uint
	Qualification  string
	Specialization string
	Recommendation string
	Abstained      bool

	Criteria []ExamGradeCriterion `gorm:"foreignKey:GradeID"`
}
type ExamGradeCriterion struct {
	gorm.Model
	GradeID     uint // ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ü–µ–Ω–æ—á–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
	CriterionID int  // ID –∫—Ä–∏—Ç–µ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1, 2, 3...)
	Score       *int // –ë–∞–ª–ª –∑–∞ –∫—Ä–∏—Ç–µ—Ä–∏–π (–º–æ–∂–µ—Ç –±—ã—Ç—å null)
}
type ExamStudent struct {
	ID     uint `gorm:"primaryKey"`
	JestID string
	UserID uint
	ExamID uint // üî• –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º
}

type ExamExaminer struct {
	ID     uint `gorm:"primaryKey"`
	JestID string
	UserID uint
	ExamID uint // üî• –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º
}
